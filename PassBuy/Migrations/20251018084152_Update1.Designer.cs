// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PassBuy.Data;

#nullable disable

namespace PassBuy.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251018084152_Update1")]
    partial class Update1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PassBuy.Models.EducationDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ApplicationId")
                        .HasColumnType("integer");

                    b.Property<int>("CourseCode")
                        .HasColumnType("integer");

                    b.Property<string>("CourseTitle")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ProviderId")
                        .HasColumnType("uuid");

                    b.Property<int>("StudentNumber")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId")
                        .IsUnique();

                    b.HasIndex("ProviderId", "StudentNumber")
                        .IsUnique();

                    b.ToTable("EducationDetails");
                });

            modelBuilder.Entity("PassBuy.Models.EducationProvider", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("EduCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("EduCode")
                        .IsUnique();

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("EducationProviders");
                });

            modelBuilder.Entity("PassBuy.Models.PassBuyCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("ApplicationId")
                        .HasColumnType("integer");

                    b.Property<int>("CardType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateApproved")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId")
                        .IsUnique();

                    b.HasIndex("UserId");

                    b.ToTable("PassBuyCards");
                });

            modelBuilder.Entity("PassBuy.Models.PassBuyCardApplication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CardType")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DateApplied")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("PassBuyCardApplications");
                });

            modelBuilder.Entity("PassBuy.Models.TransportEmployer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("TransportEmployers");
                });

            modelBuilder.Entity("PassBuy.Models.TransportEmploymentDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ApplicationId")
                        .HasColumnType("integer");

                    b.Property<int>("EmployeeNumber")
                        .HasColumnType("integer");

                    b.Property<Guid>("EmployerId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationId")
                        .IsUnique();

                    b.HasIndex("EmployerId", "EmployeeNumber")
                        .IsUnique();

                    b.ToTable("TransportEmploymentDetails");
                });

            modelBuilder.Entity("PassBuy.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PassBuy.Models.EducationDetails", b =>
                {
                    b.HasOne("PassBuy.Models.PassBuyCardApplication", null)
                        .WithOne("EducationDetails")
                        .HasForeignKey("PassBuy.Models.EducationDetails", "ApplicationId");

                    b.HasOne("PassBuy.Models.EducationProvider", null)
                        .WithMany()
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PassBuy.Models.PassBuyCard", b =>
                {
                    b.HasOne("PassBuy.Models.PassBuyCardApplication", "Application")
                        .WithOne()
                        .HasForeignKey("PassBuy.Models.PassBuyCard", "ApplicationId");

                    b.HasOne("PassBuy.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Application");
                });

            modelBuilder.Entity("PassBuy.Models.PassBuyCardApplication", b =>
                {
                    b.HasOne("PassBuy.Models.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PassBuy.Models.TransportEmploymentDetails", b =>
                {
                    b.HasOne("PassBuy.Models.PassBuyCardApplication", null)
                        .WithOne("TransportEmploymentDetails")
                        .HasForeignKey("PassBuy.Models.TransportEmploymentDetails", "ApplicationId");

                    b.HasOne("PassBuy.Models.TransportEmployer", null)
                        .WithMany()
                        .HasForeignKey("EmployerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("PassBuy.Models.PassBuyCardApplication", b =>
                {
                    b.Navigation("EducationDetails");

                    b.Navigation("TransportEmploymentDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
